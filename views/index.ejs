<!DOCTYPE html>
<html lang="en">
<link rel="stylesheet" href="./css/style.css">
<link href="https://fonts.googleapis.com/css?family=Kanit" rel="stylesheet">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css"
      integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp" crossorigin="anonymous">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>Bay Face Inventory</title>

</head>

<style>

  .page    { display: none; padding: 0 0.5em; }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  .arc {
    position: absolute;
    margin: auto;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    border-top: 2px solid #0a3aff;
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    animation: rt 2s infinite linear;
  }
  .arc::before {
    position: absolute;
    margin: auto;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 70px;
    height: 70px;
    border-radius: 50%;
    border-top: 2px solid #ff0053;
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    animation: rt 4s infinite linear reverse;
    content: "";
  }
  .arc::after {
    position: absolute;
    margin: auto;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 0;
    height: 0;
    border-radius: 50%;
    border-top: initial;
    border-left: initial;
    border-right: initial;
    animation: cw 1s infinite;
    content: "";
    background: snow;
  }

  h1 {
    position: absolute;
    height: 40px;
    margin: auto;
    top: 200px;
    left: 0;
    right: 0;
    bottom: 0;
    text-transform: uppercase;
    text-align: center;
    letter-spacing: 0.1em;
    font-size: 14px;
    font-weight: lighter;
    color: white;
  }
  h1 span {
    display: none;
  }
  h1::after {
    animation: txt 5s infinite;
    content: "";
  }

  @keyframes rt {
    100% {
      transform: rotate(360deg);
    }
  }
  @keyframes cw {
    0% {
      width: 0;
      height: 0;
    }
    75% {
      width: 40px;
      height: 40px;
    }
    100% {
      width: 0;
      height: 0;
    }
  }
  @keyframes txt {
    0% {
      content: "LOADING.";
    }
    50% {
      content: "LOADING..";
    }
    100% {
      content: "LOADING...";
    }
  }

</style>

<body class="view-bay" onload="showDataBayface()">

<div class="container" style="text-align: center;">

  <div class="arc"></div>
  <h1><span>LOADING</span></h1>

  <div class="page">

    <object id="bay-id" data="#" style="margin-right:3em; padding: 20px;width: 907px;height: 602px;"></object>

  </div>
</div>

</body>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"
        integrity="sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T"
        crossorigin="anonymous"></script>

<script type="text/javascript">

    function onReady(callback) {

        var intervalId = window.setInterval(function() {
            if (document.getElementsByTagName('body')[0] !== undefined) {
                window.clearInterval(intervalId);
                callback.call(this);
            }
        }, 2000);
    }

    function setVisible(selector, visible) {
        document.querySelector(selector).style.display = visible ? 'block' : 'none';
    }

    onReady(function() {
        setVisible('.page', true);
        setVisible('.arc', false);
        setVisible('h1', false);
    });

    function showDataBayface() {

        $.getJSON('/get-device', function (reply) {

            var title = reply.result[0].title;
            if(reply.result[0].pid === "WS-C4503-E" || reply.result[0].pid === "WS-C4506-E" ||
                reply.result[0].pid === "WS-C4507R-E" || reply.result[0].pid === "WS-C4510R+E" ||
                reply.result[0].pid === "WS-C4510R+E" || reply.result[0].pid === "ASR-9906"){
                var pid = reply.result[0].pid;
            }else{
                var pid = "404-not-found";
                document.getElementById("bay-id").style.width = "507px";
            }

            if (title === "SwitchSystem"){

                var infoLinecardTitle = [];
                var infoLinecardPid = [];
                var arraysInfoPort = [];
                var count = 0;

                document.getElementById('bay-id').setAttribute('data', 'img/' + pid + '.svg');

                try{

                  for (var i = 0; i < reply.result[0].data.length; i++){

                      infoLinecardTitle.push(reply.result[0].data[i].title);

                      if(reply.result[0].data[i].pid === "WS-X45-SUP6L-E" || reply.result[0].data[i].pid === "WS-X45-SUP7-E" ||
                          reply.result[0].data[i].pid === "WS-X45-SUP7L-E" || reply.result[0].data[i].pid === "WS-X45-SUP8-E" ||
                          reply.result[0].data[i].pid === "WS-X45-SUP8L-E" || reply.result[0].data[i].pid === "WS-X4448-GB-SFP" ||
                          reply.result[0].data[i].pid === "WS-X4612-SFP-E" || reply.result[0].data[i].pid === "WS-X4724-SFP-E" ||
                          reply.result[0].data[i].pid === "WS-X4748-SFP-E"){
                          infoLinecardPid.push(reply.result[0].data[i].pid);
                      } else {
                          alert("JSON format not match !!!");
                      }

                      try {

                          for (var j = 0; j < reply.result[0].data[i].data.length; j++) {

                              try {

                                  for (var k = 0; k < reply.result[0].data[i].data[j].length; k++) {

                                      if (reply.result[0].data[i].data[j][k].ifstate === "up" ||
                                          reply.result[0].data[i].data[j][k].ifstate === "down" ||
                                          reply.result[0].data[i].data[j][k].ifstate === "admin_down" ||
                                          reply.result[0].data[i].data[j][k].ifstate === "no_module") {

                                          arraysInfoPort[count] = [reply.result[0].data[i].title,
                                              reply.result[0].data[i].data[j][k].ifname,
                                              reply.result[0].data[i].data[j][k].ifstate];
                                      } else {
                                          alert("Wrong port status !!!");
                                      }
                                      count++;
                                  }
                              } catch (e) {
                                  alert("JSON format not match !!!");
                              }
                          }
                      } catch (e) {
                          alert("JSON format not match !!!");
                      }
                  }
                } catch (e) {
                    alert("JSON format not match !!!");
                }

                localStorage.setItem("linetitle", infoLinecardTitle);
                localStorage.setItem("linepid", infoLinecardPid);

                localStorage.setItem("arraysInfoPort", JSON.stringify(arraysInfoPort));

            } else if (title === "ASRSystem") {

                var infoLinecardTitle = [];
                var infoLinecardPid = [];
                var arraysInfoPort = [];
                var infoLinecardTitleMOD = [];
                var infoLinecardPidMOD = [];
                var count = 0;

                document.getElementById('bay-id').setAttribute('data', 'img/' + pid + '.svg');

                try {

                    for (var i = 0; i < reply.result[0].data.length; i++) {

                        infoLinecardTitle.push(reply.result[0].data[i].title);
                        if(reply.result[0].data[i].pid === "A9K-RSP440-SE" || reply.result[0].data[i].pid === "A9K-RSP880-SE" ||
                            reply.result[0].data[i].pid === "A9K-MOD80-SE" || reply.result[0].data[i].pid === "A9K-MOD160-SE"){
                            infoLinecardPid.push(reply.result[0].data[i].pid);
                        } else {
                            alert("JSON format not match !!!");
                        }

                        if ((reply.result[0].data[i].title).includes("RSP") === true) {

                            try {

                                for (var j = 0; j < reply.result[0].data[i].data.length; j++) {

                                    try {

                                        for (var k = 0; k < reply.result[0].data[i].data[j].length; k++) {

                                            if (reply.result[0].data[i].data[j][k].ifstate === "up" ||
                                                reply.result[0].data[i].data[j][k].ifstate === "down" ||
                                                reply.result[0].data[i].data[j][k].ifstate === "admin_down" ||
                                                reply.result[0].data[i].data[j][k].ifstate === "no_module") {

                                                arraysInfoPort[count] = [reply.result[0].data[i].title,
                                                    reply.result[0].data[i].data[j][k].ifname,
                                                    reply.result[0].data[i].data[j][k].ifstate];

                                            } else {
                                                alert("Wrong port status !!!");
                                            }

                                            count++;
                                        }
                                    } catch (e) {
                                        alert("JSON format not match !!!");
                                    }
                                }
                            } catch (e) {
                                alert("JSON format not match !!!");
                            }

                            localStorage.setItem("linetitle", infoLinecardTitle);
                            localStorage.setItem("linepid", infoLinecardPid);

                            localStorage.setItem("arraysInfoPort", JSON.stringify(arraysInfoPort));

                        } else {

                            try {

                                for (var j = 0; j < reply.result[0].data[i].data.length; j++) {

                                    infoLinecardTitleMOD.push(reply.result[0].data[i].data[j].title);
                                    if(reply.result[0].data[i].data[j].pid === "A9K-MPA-1x40GE" ||
                                        reply.result[0].data[i].data[j].pid === "A9K-MPA-1X100GE" ||
                                        reply.result[0].data[i].data[j].pid === "A9K-MPA-2X10GE" ||
                                        reply.result[0].data[i].data[j].pid === "A9K-MPA-2x40GE" ||
                                        reply.result[0].data[i].data[j].pid === "A9K-MPA-2X100GE" ||
                                        reply.result[0].data[i].data[j].pid === "A9K-MPA-4X10GE" ||
                                        reply.result[0].data[i].data[j].pid === "A9K-MPA-8x10GE" ||
                                        reply.result[0].data[i].data[j].pid === "A9K-MPA-20X1GE" ||
                                        reply.result[0].data[i].data[j].pid === "A9K-MPA-20X10GE"){
                                        infoLinecardPidMOD.push(reply.result[0].data[i].data[j].pid);
                                    } else {
                                        alert("JSON format not match !!!");
                                    }

                                    try {

                                        for (var k = 0; k < reply.result[0].data[i].data[j].data.length; k++) {

                                            try {

                                                for (var l = 0; l < reply.result[0].data[i].data[j].data[k].length; l++) {

                                                    if (reply.result[0].data[i].data[j].data[k][l].ifstate === "up" ||
                                                        reply.result[0].data[i].data[j].data[k][l].ifstate === "down" ||
                                                        reply.result[0].data[i].data[j].data[k][l].ifstate === "admin_down" ||
                                                        reply.result[0].data[i].data[j].data[k][l].ifstate === "no_module") {

                                                        arraysInfoPort[count] = [reply.result[0].data[i].data[j].title,
                                                            reply.result[0].data[i].data[j].data[k][l].ifname,
                                                            reply.result[0].data[i].data[j].data[k][l].ifstate];


                                                    } else {
                                                        alert("Wrong port status !!!");
                                                    }

                                                    count++;
                                                }
                                            } catch (e) {
                                                alert("JSON format not match !!!");
                                            }
                                        }
                                    } catch (e) {
                                        alert("JSON format not match !!!");
                                    }
                                }
                            } catch (e) {
                                alert("JSON format not match !!!");
                            }

                            localStorage.setItem("linetitleMOD", infoLinecardTitleMOD);
                            localStorage.setItem("linepidMOD", infoLinecardPidMOD);

                            localStorage.setItem("arraysInfoPort", JSON.stringify(arraysInfoPort));
                        }

                        localStorage.setItem("linetitle", infoLinecardTitle);
                        localStorage.setItem("linepid", infoLinecardPid);

                    }
                } catch (e) {
                    alert("JSON format not match !!!");
                }

            } else{

                document.getElementById('bay-id').setAttribute('data', 'img/404-not-found.svg');
                document.getElementById("bay-id").style.width = "507px";

            }

        });
    }
</script>

</body>
</html>